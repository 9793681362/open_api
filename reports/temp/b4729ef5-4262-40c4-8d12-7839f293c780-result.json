{"name": "test_all_cases[caseinfo3]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (False, \"Response field 'bill_amount' not found\") == True\n +  where (False, \"Response field 'bill_amount' not found\") = <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50>>(<Response [200]>, 'bill_amount', 1176988)\n +    where <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50>> = <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50>.assert_response_field\n +      where <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50> = ApiAssertion('')", "trace": "self = <test_project.test_case_execution.TestAllCases object at 0x00000225819921D0>\ncaseinfo = {'payment_exception': {'case_id': 'API004', 'data': {'bill_state': '-1', 'invoice_title': '0', 'limit': '20', 'page': '1'}, 'expected_result': 1176988, 'field_name': 'bill_amount', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        for i in [case_id]:\n            if self.api_case_id == i:\n                log.info('执行的用例ID：{}'.format(case_id))\n                url = caseinfo['payment_exception']['url']\n                data = caseinfo['payment_exception']['data']\n                is_positive = caseinfo['payment_exception']['is_positive']\n                request_type = caseinfo['payment_exception']['request_type']\n                expected_result = caseinfo['payment_exception']['expected_result']\n                status_code = caseinfo['payment_exception']['status_code']\n                field_name = caseinfo['payment_exception']['field_name']\n                if request_type == \"POST\":\n                    response = RestClient().post(url, data=data)\n                elif request_type == \"PUT\":\n                    response = RestClient().put(url, data=data)\n                elif request_type == \"GET\":\n                    response = RestClient().get(url,params=data)\n                    print(response.json())\n                assert ApiAssertion('').assert_status_code(response, status_code) == True\n    \n                if field_name == \"None\":\n                    break\n                else:\n>                   assert ApiAssertion('').assert_response_field(response, field_name, expected_result) == True\nE                   assert (False, \"Response field 'bill_amount' not found\") == True\nE                    +  where (False, \"Response field 'bill_amount' not found\") = <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50>>(<Response [200]>, 'bill_amount', 1176988)\nE                    +    where <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50>> = <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50>.assert_response_field\nE                    +      where <common.assertion_utils.ApiAssertion object at 0x00000225FE8A4B50> = ApiAssertion('')\n\ntest_project\\test_case_execution.py:37: AssertionError"}, "attachments": [{"name": "log", "source": "f07fc577-80f9-40b9-a98a-d709a9186f42-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'payment_exception': {'case_id': 'API004', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables', 'data': {'page': '1', 'limit': '20', 'bill_state': '-1', 'invoice_title': '0'}, 'is_positive': 'None', 'request_type': 'GET', 'expected_result': 1176988, 'status_code': 200, 'field_name': 'bill_amount'}}"}], "start": 1683697289632, "stop": 1683697290032, "uuid": "71e706e6-5914-40a5-8c35-bcede135a626", "historyId": "b2d3db30fb47cd12d03a9ec03a24545c", "testCaseId": "14a76cc02fee742180839c4c8e468b41", "fullName": "test_project.test_case_execution.TestAllCases#test_all_cases", "labels": [{"name": "parentSuite", "value": "test_project"}, {"name": "suite", "value": "test_case_execution"}, {"name": "subSuite", "value": "TestAllCases"}, {"name": "host", "value": "DESKTOP-MMPUN61"}, {"name": "thread", "value": "32876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_project.test_case_execution"}]}