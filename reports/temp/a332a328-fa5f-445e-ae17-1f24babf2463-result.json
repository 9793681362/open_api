{"name": "test_payment_exception[caseinfo2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (False, 'Expected status code 500, but got 200') == True\n +  where (False, 'Expected status code 500, but got 200') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90>>(<Response [200]>, 500)\n +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90>> = <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90>.assert_status_code\n +      where <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90> = ApiAssertion('')", "trace": "self = <test_project.finance.TestFinance object at 0x0000024E16EFF310>\ncaseinfo = {'payment_exception': {'case_id': 'API003', 'data': {'action': 0, 'apply_ids': '513', 'apply_state': 1}, 'expected_result': 'None', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/finance.yaml').read_yaml_excel('./api_test_case/finance.xlsx','payment_exception'))\n    def test_payment_exception(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        url = caseinfo['payment_exception']['url']\n        data = caseinfo['payment_exception']['data']\n        is_positive = caseinfo['payment_exception']['is_positive']\n        request_type = caseinfo['payment_exception']['request_type']\n        expected_result = caseinfo['payment_exception']['expected_result']\n        status_code = caseinfo['payment_exception']['status_code']\n        field_name = caseinfo['payment_exception']['field_name']\n        for i in [url]:\n            log.info('用例ID：{}'.format(case_id))\n            if request_type == \"POST\":\n                response = RestClient().post(url, data=data)\n            elif request_type == \"PUT\":\n                response = RestClient().put(url, data=data)\n>           assert ApiAssertion('').assert_status_code(response,status_code) == True\nE           AssertionError: assert (False, 'Expected status code 500, but got 200') == True\nE            +  where (False, 'Expected status code 500, but got 200') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90>>(<Response [200]>, 500)\nE            +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90>> = <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90>.assert_status_code\nE            +      where <common.assertion_utils.ApiAssertion object at 0x0000024E16EFCA90> = ApiAssertion('')\n\ntest_project\\finance.py:27: AssertionError"}, "attachments": [{"name": "log", "source": "436f60ff-6c49-4da5-8e38-d0357eab44a2-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'payment_exception': {'case_id': 'API003', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'apply_state': 1, 'action': 0, 'apply_ids': '513'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': 'None', 'status_code': 500, 'field_name': 'None'}}"}], "start": 1683623863325, "stop": 1683623863469, "uuid": "3ed15508-9094-4598-a543-74f89a61a34b", "historyId": "81461821db231105d8e7d5c2a59b5512", "testCaseId": "e6d80fd88f8a8bf972fb3cb67578d144", "fullName": "test_project.finance.TestFinance#test_payment_exception", "labels": [{"name": "parentSuite", "value": "test_project"}, {"name": "suite", "value": "finance"}, {"name": "subSuite", "value": "TestFinance"}, {"name": "host", "value": "DESKTOP-MMPUN61"}, {"name": "thread", "value": "32296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_project.finance"}]}