{"name": "test_all_cases[caseinfo3]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (False, 'Expected status code 200, but got 502') == True\n +  where (False, 'Expected status code 200, but got 502') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850>>(<Response [502]>, 200)\n +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850>> = <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850>.assert_status_code\n +      where <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850> = ApiAssertion('')", "trace": "self = <test_project.test_case_execution.TestAllCases object at 0x0000020A905858D0>\ncaseinfo = {'payment_exception': {'case_id': 'API004', 'data': {'bill_state': '-1', 'invoice_title': '0', 'limit': '20', 'page': '1'}, 'expected_result': 'bill_failed_info', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        for i in [case_id]:\n            if self.api_case_id == i:\n                log.info('执行的用例ID：{}'.format(case_id))\n                url = caseinfo['payment_exception']['url']\n                data = caseinfo['payment_exception']['data']\n                is_positive = caseinfo['payment_exception']['is_positive']\n                request_type = caseinfo['payment_exception']['request_type']\n                expected_result = caseinfo['payment_exception']['expected_result']\n                status_code = caseinfo['payment_exception']['status_code']\n                field_name = caseinfo['payment_exception']['field_name']\n                if request_type == \"POST\":\n                    response = RestClient().post(url, data=data)\n                elif request_type == \"PUT\":\n                    response = RestClient().put(url, data=data)\n                elif request_type == \"GET\":\n                    response = RestClient().get(url,params=data)\n>               assert ApiAssertion('').assert_status_code(response, status_code) == True\nE               AssertionError: assert (False, 'Expected status code 200, but got 502') == True\nE                +  where (False, 'Expected status code 200, but got 502') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850>>(<Response [502]>, 200)\nE                +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850>> = <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850>.assert_status_code\nE                +      where <common.assertion_utils.ApiAssertion object at 0x0000020A8D45B850> = ApiAssertion('')\n\ntest_project\\test_case_execution.py:33: AssertionError"}, "attachments": [{"name": "log", "source": "c7569e65-97b1-488f-a03c-5e35b99448bf-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'payment_exception': {'case_id': 'API004', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables', 'data': {'page': '1', 'limit': '20', 'bill_state': '-1', 'invoice_title': '0'}, 'is_positive': 'None', 'request_type': 'GET', 'expected_result': 'bill_failed_info', 'status_code': 200, 'field_name': 'None'}}"}], "start": 1683704264943, "stop": 1683704265045, "uuid": "1681fbd9-de45-4b59-af52-9229420bfcec", "historyId": "b2d3db30fb47cd12d03a9ec03a24545c", "testCaseId": "14a76cc02fee742180839c4c8e468b41", "fullName": "test_project.test_case_execution.TestAllCases#test_all_cases", "labels": [{"name": "parentSuite", "value": "test_project"}, {"name": "suite", "value": "test_case_execution"}, {"name": "subSuite", "value": "TestAllCases"}, {"name": "host", "value": "DESKTOP-MMPUN61"}, {"name": "thread", "value": "38020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_project.test_case_execution"}]}