{"uid":"df5a679f7274d500","name":"test_all_cases[caseinfo4]","fullName":"test_project.test_case_execution.TestAllCases#test_all_cases","historyId":"b455e29e7d2567117cd6d32404b3bf7d","time":{"start":1683770612090,"stop":1683770621958,"duration":9868},"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>>(<Response [200]>, '操作成功1')\n +    where <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>> = <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>.assert_in\n +      where <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0> = ApiAssertion('')","statusTrace":"self = <test_project.test_case_execution.TestAllCases object at 0x00000235BDDFADD0>\ncaseinfo = {'payment_exception': {'case_id': 'API005', 'data': {'comment': '15', 'content': '信息技术服务', 'invoice_id': '335|223|222|220|219|218|217|216|36', 'invoice_state': 0, ...}, 'expected_result': '操作成功1', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        for i in [case_id]:\n            if  i in self.api_case_id:\n                log.info('执行的用例ID：{}'.format(case_id))\n                url = caseinfo['payment_exception']['url']\n                data = caseinfo['payment_exception']['data']\n                is_positive = caseinfo['payment_exception']['is_positive']\n                request_type = caseinfo['payment_exception']['request_type']\n                expected_result = caseinfo['payment_exception']['expected_result']\n                status_code = caseinfo['payment_exception']['status_code']\n                field_name = caseinfo['payment_exception']['field_name']\n                if request_type == \"POST\":\n                    response = RestClient().post(url, data=data)\n                elif request_type == \"PUT\":\n                    response = RestClient().put(url, data=data)\n                elif request_type == \"GET\":\n                    response = RestClient().get(url,params=data)\n                assert ApiAssertion('').assert_status_code(response, status_code) == True\n                log.info(\"状态码正确，状态码为：{}\".format(response.status_code))\n                if expected_result != \"None\":\n>                   assert ApiAssertion('').assert_in(response,expected_result) == True\nE                   AssertionError: assert False == True\nE                    +  where False = <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>>(<Response [200]>, '操作成功1')\nE                    +    where <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>> = <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>.assert_in\nE                    +      where <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0> = ApiAssertion('')\n\ntest_project\\test_case_execution.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False == True\n +  where False = <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>>(<Response [200]>, '操作成功1')\n +    where <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>> = <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>.assert_in\n +      where <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0> = ApiAssertion('')","statusTrace":"self = <test_project.test_case_execution.TestAllCases object at 0x00000235BDDFADD0>\ncaseinfo = {'payment_exception': {'case_id': 'API005', 'data': {'comment': '15', 'content': '信息技术服务', 'invoice_id': '335|223|222|220|219|218|217|216|36', 'invoice_state': 0, ...}, 'expected_result': '操作成功1', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        for i in [case_id]:\n            if  i in self.api_case_id:\n                log.info('执行的用例ID：{}'.format(case_id))\n                url = caseinfo['payment_exception']['url']\n                data = caseinfo['payment_exception']['data']\n                is_positive = caseinfo['payment_exception']['is_positive']\n                request_type = caseinfo['payment_exception']['request_type']\n                expected_result = caseinfo['payment_exception']['expected_result']\n                status_code = caseinfo['payment_exception']['status_code']\n                field_name = caseinfo['payment_exception']['field_name']\n                if request_type == \"POST\":\n                    response = RestClient().post(url, data=data)\n                elif request_type == \"PUT\":\n                    response = RestClient().put(url, data=data)\n                elif request_type == \"GET\":\n                    response = RestClient().get(url,params=data)\n                assert ApiAssertion('').assert_status_code(response, status_code) == True\n                log.info(\"状态码正确，状态码为：{}\".format(response.status_code))\n                if expected_result != \"None\":\n>                   assert ApiAssertion('').assert_in(response,expected_result) == True\nE                   AssertionError: assert False == True\nE                    +  where False = <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>>(<Response [200]>, '操作成功1')\nE                    +    where <bound method ApiAssertion.assert_in of <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>> = <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0>.assert_in\nE                    +      where <common.assertion_utils.ApiAssertion object at 0x00000235BD90AAD0> = ApiAssertion('')\n\ntest_project\\test_case_execution.py:37: AssertionError","steps":[],"attachments":[{"uid":"2c8f8a84411566a5","name":"log","source":"2c8f8a84411566a5.txt","type":"text/plain","size":167}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"test_project"},{"name":"suite","value":"test_case_execution"},{"name":"subSuite","value":"TestAllCases"},{"name":"host","value":"DESKTOP-MMPUN61"},{"name":"thread","value":"16040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_project.test_case_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'payment_exception': {'case_id': 'API005', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/invoices/state', 'data': {'invoice_id': '335|223|222|220|219|218|217|216|36', 'invoice_state': 0, 'vendor_name': '抟力数智（宁波）科技有限公司', 'tax_rate': '15', 'content': '信息技术服务', 'comment': '15'}, 'is_positive': 'None', 'request_type': 'PUT', 'expected_result': '操作成功1', 'status_code': 200, 'field_name': 'None'}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"df5a679f7274d500.json","parameterValues":["{'payment_exception': {'case_id': 'API005', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/invoices/state', 'data': {'invoice_id': '335|223|222|220|219|218|217|216|36', 'invoice_state': 0, 'vendor_name': '抟力数智（宁波）科技有限公司', 'tax_rate': '15', 'content': '信息技术服务', 'comment': '15'}, 'is_positive': 'None', 'request_type': 'PUT', 'expected_result': '操作成功1', 'status_code': 200, 'field_name': 'None'}}"]}