{"uid":"850bd60c14fffa13","name":"test_payment_exception[caseinfo2]","fullName":"test_project.finance.TestFinance#test_payment_exception","historyId":"81461821db231105d8e7d5c2a59b5512","time":{"start":1683623815691,"stop":1683623815841,"duration":150},"status":"failed","statusMessage":"AssertionError: assert (False, 'Expected status code 200, but got 405') == True\n +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>>(<Response [405]>, 200)\n +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>> = <common.assertion_utils.ApiAssertion object at 0x000001A969463810>.assert_status_code\n +      where <common.assertion_utils.ApiAssertion object at 0x000001A969463810> = ApiAssertion('')","statusTrace":"self = <test_project.finance.TestFinance object at 0x000001A96A620E50>\ncaseinfo = {'payment_exception': {'case_id': 'API003', 'data': {'action': 0, 'apply_ids': '513', 'apply_state': 1}, 'expected_result': 'None', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/finance.yaml').read_yaml_excel('./api_test_case/finance.xlsx','payment_exception'))\n    def test_payment_exception(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        url = caseinfo['payment_exception']['url']\n        data = caseinfo['payment_exception']['data']\n        is_positive = caseinfo['payment_exception']['is_positive']\n        request_type = caseinfo['payment_exception']['request_type']\n        expected_result = caseinfo['payment_exception']['expected_result']\n        status_code = caseinfo['payment_exception']['status_code']\n        field_name = caseinfo['payment_exception']['field_name']\n        for i in [url]:\n            log.info('用例ID：{}'.format(case_id))\n            if request_type == \"POST\":\n                response = RestClient().post(url, data=data)\n            elif request_type == \"PUT\":\n                response = RestClient().put(url, data=data)\n>           assert ApiAssertion('').assert_status_code(response,status_code) == True\nE           AssertionError: assert (False, 'Expected status code 200, but got 405') == True\nE            +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>>(<Response [405]>, 200)\nE            +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>> = <common.assertion_utils.ApiAssertion object at 0x000001A969463810>.assert_status_code\nE            +      where <common.assertion_utils.ApiAssertion object at 0x000001A969463810> = ApiAssertion('')\n\ntest_project\\finance.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False, 'Expected status code 200, but got 405') == True\n +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>>(<Response [405]>, 200)\n +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>> = <common.assertion_utils.ApiAssertion object at 0x000001A969463810>.assert_status_code\n +      where <common.assertion_utils.ApiAssertion object at 0x000001A969463810> = ApiAssertion('')","statusTrace":"self = <test_project.finance.TestFinance object at 0x000001A96A620E50>\ncaseinfo = {'payment_exception': {'case_id': 'API003', 'data': {'action': 0, 'apply_ids': '513', 'apply_state': 1}, 'expected_result': 'None', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/finance.yaml').read_yaml_excel('./api_test_case/finance.xlsx','payment_exception'))\n    def test_payment_exception(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        url = caseinfo['payment_exception']['url']\n        data = caseinfo['payment_exception']['data']\n        is_positive = caseinfo['payment_exception']['is_positive']\n        request_type = caseinfo['payment_exception']['request_type']\n        expected_result = caseinfo['payment_exception']['expected_result']\n        status_code = caseinfo['payment_exception']['status_code']\n        field_name = caseinfo['payment_exception']['field_name']\n        for i in [url]:\n            log.info('用例ID：{}'.format(case_id))\n            if request_type == \"POST\":\n                response = RestClient().post(url, data=data)\n            elif request_type == \"PUT\":\n                response = RestClient().put(url, data=data)\n>           assert ApiAssertion('').assert_status_code(response,status_code) == True\nE           AssertionError: assert (False, 'Expected status code 200, but got 405') == True\nE            +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>>(<Response [405]>, 200)\nE            +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x000001A969463810>> = <common.assertion_utils.ApiAssertion object at 0x000001A969463810>.assert_status_code\nE            +      where <common.assertion_utils.ApiAssertion object at 0x000001A969463810> = ApiAssertion('')\n\ntest_project\\finance.py:27: AssertionError","steps":[],"attachments":[{"uid":"b9d99226048fe43f","name":"log","source":"b9d99226048fe43f.txt","type":"text/plain","size":57}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"test_project"},{"name":"suite","value":"finance"},{"name":"subSuite","value":"TestFinance"},{"name":"host","value":"DESKTOP-MMPUN61"},{"name":"thread","value":"38136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_project.finance"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'payment_exception': {'case_id': 'API003', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'apply_state': 1, 'action': 0, 'apply_ids': '513'}, 'is_positive': 'front', 'request_type': 'POST', 'expected_result': 'None', 'status_code': 200, 'field_name': 'None'}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"850bd60c14fffa13.json","parameterValues":["{'payment_exception': {'case_id': 'API003', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'apply_state': 1, 'action': 0, 'apply_ids': '513'}, 'is_positive': 'front', 'request_type': 'POST', 'expected_result': 'None', 'status_code': 200, 'field_name': 'None'}}"]}