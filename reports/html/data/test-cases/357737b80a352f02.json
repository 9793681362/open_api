{"uid":"357737b80a352f02","name":"test_all_cases[caseinfo2]","fullName":"test_project.test_case_execution.TestAllCases#test_all_cases","historyId":"b862b8a3a1cf58ae47bbb02ccc2c99a2","time":{"start":1683687076849,"stop":1683687083622,"duration":6773},"status":"failed","statusMessage":"AssertionError: assert False == 'API003'\n +  where False = <bound method TestAllCases.condition of <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>>('API003')\n +    where <bound method TestAllCases.condition of <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>> = <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>.condition","statusTrace":"self = <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>\ncaseinfo = {'payment_exception': {'case_id': 'API003', 'data': {'action': 0, 'apply_ids': '513', 'apply_state': 1}, 'expected_result': 'None', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        case_id = caseinfo['payment_exception']['case_id']\n    \n>       assert self.condition(case_id) == case_id\nE       AssertionError: assert False == 'API003'\nE        +  where False = <bound method TestAllCases.condition of <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>>('API003')\nE        +    where <bound method TestAllCases.condition of <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>> = <test_project.test_case_execution.TestAllCases object at 0x00000250E1AF5490>.condition\n\ntest_project\\test_case_execution.py:22: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"test_project"},{"name":"suite","value":"test_case_execution"},{"name":"subSuite","value":"TestAllCases"},{"name":"host","value":"DESKTOP-MMPUN61"},{"name":"thread","value":"32260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_project.test_case_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'payment_exception': {'case_id': 'API003', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'apply_state': 1, 'action': 0, 'apply_ids': '513'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': 'None', 'status_code': 200, 'field_name': 'None'}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"357737b80a352f02.json","parameterValues":["{'payment_exception': {'case_id': 'API003', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'apply_state': 1, 'action': 0, 'apply_ids': '513'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': 'None', 'status_code': 200, 'field_name': 'None'}}"]}