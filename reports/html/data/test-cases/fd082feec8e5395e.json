{"uid":"fd082feec8e5395e","name":"test_payment_exception[caseinfo0]","fullName":"test_project.finance.TestFinance#test_payment_exception","historyId":"89be1f884d039883296a87c0219e3207","time":{"start":1683621100791,"stop":1683621101036,"duration":245},"status":"failed","statusMessage":"AssertionError: assert (False, \"Response field 'None' not found\") == True\n +  where (False, \"Response field 'None' not found\") = <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>>(<Response [200]>, 'None', '操作成功')\n +    where <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>> = <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>.assert_response_field\n +      where <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50> = ApiAssertion('')","statusTrace":"self = <test_project.finance.TestFinance object at 0x000001C1459F2290>\ncaseinfo = {'new_income_flow': {'case_id': 'API001', 'data': {'comment': '1', 'content': '设计服务', 'invoice_id': '554', 'invoice_st...content': '设计服务', 'invoice_id': '554', 'invoice_state': 0, ...}, 'expected_result': '操作成功', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/finance.yaml').read_yaml_excel('./api_test_case/finance.xlsx','payment_exception'))\n    def test_payment_exception(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        url = caseinfo['payment_exception']['url']\n        data = caseinfo['payment_exception']['data']\n        is_positive = caseinfo['payment_exception']['is_positive']\n        request_type = caseinfo['payment_exception']['request_type']\n        expected_result = caseinfo['payment_exception']['expected_result']\n        status_code = caseinfo['payment_exception']['status_code']\n        field_name = caseinfo['payment_exception']['field_name']\n        for i in [url]:\n            log.info('用例ID：{}'.format(case_id))\n            if request_type == \"POST\":\n                response = RestClient().post(url, data=data)\n            elif request_type == \"PUT\":\n                response = RestClient().put(url, data=data)\n            assert ApiAssertion('').assert_status_code(response,status_code) == True\n            print(\"field_name是是是：：：\", field_name)\n            if field_name == None:\n    \n                break\n            else:\n>               assert ApiAssertion('').assert_response_field(response,field_name,expected_result) == True\nE               assert (False, \"Response field 'None' not found\") == True\nE                +  where (False, \"Response field 'None' not found\") = <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>>(<Response [200]>, 'None', '操作成功')\nE                +    where <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>> = <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>.assert_response_field\nE                +      where <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50> = ApiAssertion('')\n\ntest_project\\finance.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False, \"Response field 'None' not found\") == True\n +  where (False, \"Response field 'None' not found\") = <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>>(<Response [200]>, 'None', '操作成功')\n +    where <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>> = <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>.assert_response_field\n +      where <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50> = ApiAssertion('')","statusTrace":"self = <test_project.finance.TestFinance object at 0x000001C1459F2290>\ncaseinfo = {'new_income_flow': {'case_id': 'API001', 'data': {'comment': '1', 'content': '设计服务', 'invoice_id': '554', 'invoice_st...content': '设计服务', 'invoice_id': '554', 'invoice_state': 0, ...}, 'expected_result': '操作成功', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/finance.yaml').read_yaml_excel('./api_test_case/finance.xlsx','payment_exception'))\n    def test_payment_exception(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        url = caseinfo['payment_exception']['url']\n        data = caseinfo['payment_exception']['data']\n        is_positive = caseinfo['payment_exception']['is_positive']\n        request_type = caseinfo['payment_exception']['request_type']\n        expected_result = caseinfo['payment_exception']['expected_result']\n        status_code = caseinfo['payment_exception']['status_code']\n        field_name = caseinfo['payment_exception']['field_name']\n        for i in [url]:\n            log.info('用例ID：{}'.format(case_id))\n            if request_type == \"POST\":\n                response = RestClient().post(url, data=data)\n            elif request_type == \"PUT\":\n                response = RestClient().put(url, data=data)\n            assert ApiAssertion('').assert_status_code(response,status_code) == True\n            print(\"field_name是是是：：：\", field_name)\n            if field_name == None:\n    \n                break\n            else:\n>               assert ApiAssertion('').assert_response_field(response,field_name,expected_result) == True\nE               assert (False, \"Response field 'None' not found\") == True\nE                +  where (False, \"Response field 'None' not found\") = <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>>(<Response [200]>, 'None', '操作成功')\nE                +    where <bound method ApiAssertion.assert_response_field of <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>> = <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50>.assert_response_field\nE                +      where <common.assertion_utils.ApiAssertion object at 0x000001C1459F3B50> = ApiAssertion('')\n\ntest_project\\finance.py:46: AssertionError","steps":[],"attachments":[{"uid":"48d2608cb8bcc45c","name":"log","source":"48d2608cb8bcc45c.txt","type":"text/plain","size":57}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"test_project"},{"name":"suite","value":"finance"},{"name":"subSuite","value":"TestFinance"},{"name":"host","value":"DESKTOP-MMPUN61"},{"name":"thread","value":"32564-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_project.finance"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'new_income_flow': {'case_id': 'API001', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/invoices/state', 'data': {'invoice_id': '554', 'invoice_state': 0, 'vendor_name': '抟力数智（宁波）科技有限公司', 'tax_rate': '1', 'content': '设计服务', 'comment': '1'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': '操作成功', 'status_code': 200}, 'payment_exception': {'case_id': 'API001', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/invoices/state', 'data': {'invoice_id': '554', 'invoice_state': 0, 'vendor_name': '抟力数智（宁波）科技有限公司', 'tax_rate': '1', 'content': '设计服务', 'comment': '1'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': '操作成功', 'status_code': 200, 'field_name': 'None'}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fd082feec8e5395e.json","parameterValues":["{'new_income_flow': {'case_id': 'API001', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/invoices/state', 'data': {'invoice_id': '554', 'invoice_state': 0, 'vendor_name': '抟力数智（宁波）科技有限公司', 'tax_rate': '1', 'content': '设计服务', 'comment': '1'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': '操作成功', 'status_code': 200}, 'payment_exception': {'case_id': 'API001', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/invoices/state', 'data': {'invoice_id': '554', 'invoice_state': 0, 'vendor_name': '抟力数智（宁波）科技有限公司', 'tax_rate': '1', 'content': '设计服务', 'comment': '1'}, 'is_positive': 'front', 'request_type': 'PUT', 'expected_result': '操作成功', 'status_code': 200, 'field_name': 'None'}}"]}