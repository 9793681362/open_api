{"uid":"fded8ca762685168","name":"test_all_cases[caseinfo3]","fullName":"test_project.test_case_execution.TestAllCases#test_all_cases","historyId":"b2d3db30fb47cd12d03a9ec03a24545c","time":{"start":1683696512921,"stop":1683696513037,"duration":116},"status":"failed","statusMessage":"AssertionError: assert (False, 'Expected status code 200, but got 405') == True\n +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>>(<Response [405]>, 200)\n +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>> = <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>.assert_status_code\n +      where <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0> = ApiAssertion('')","statusTrace":"self = <test_project.test_case_execution.TestAllCases object at 0x00000256DC2318D0>\ncaseinfo = {'payment_exception': {'case_id': 'API004', 'data': {'bill_state': ' -1', 'invoice_title': ' 0', 'limit': ' 20', 'page': ' 1'}, 'expected_result': 'None', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        for i in [case_id]:\n            if self.api_case_id == i:\n                log.info('执行的用例ID：{}'.format(case_id))\n                url = caseinfo['payment_exception']['url']\n                data = caseinfo['payment_exception']['data']\n                is_positive = caseinfo['payment_exception']['is_positive']\n                request_type = caseinfo['payment_exception']['request_type']\n                expected_result = caseinfo['payment_exception']['expected_result']\n                status_code = caseinfo['payment_exception']['status_code']\n                field_name = caseinfo['payment_exception']['field_name']\n                if request_type == \"POST\":\n                    response = RestClient().post(url, data=data)\n                elif request_type == \"PUT\":\n                    response = RestClient().put(url, data=data)\n                elif request_type == \"GET\":\n                    response = RestClient().get(url,params=data)\n>               assert ApiAssertion('').assert_status_code(response, status_code) == True\nE               AssertionError: assert (False, 'Expected status code 200, but got 405') == True\nE                +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>>(<Response [405]>, 200)\nE                +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>> = <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>.assert_status_code\nE                +      where <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0> = ApiAssertion('')\n\ntest_project\\test_case_execution.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False, 'Expected status code 200, but got 405') == True\n +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>>(<Response [405]>, 200)\n +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>> = <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>.assert_status_code\n +      where <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0> = ApiAssertion('')","statusTrace":"self = <test_project.test_case_execution.TestAllCases object at 0x00000256DC2318D0>\ncaseinfo = {'payment_exception': {'case_id': 'API004', 'data': {'bill_state': ' -1', 'invoice_title': ' 0', 'limit': ' 20', 'page': ' 1'}, 'expected_result': 'None', 'field_name': 'None', ...}}\n\n    @pytest.mark.parametrize('caseinfo',YamlUtil('./Conf/yaml/test.yaml').read_yaml_excel('./api_test_case/test.xlsx','test_case'))\n    def test_all_cases(self,caseinfo):\n        global response\n        case_id = caseinfo['payment_exception']['case_id']\n        for i in [case_id]:\n            if self.api_case_id == i:\n                log.info('执行的用例ID：{}'.format(case_id))\n                url = caseinfo['payment_exception']['url']\n                data = caseinfo['payment_exception']['data']\n                is_positive = caseinfo['payment_exception']['is_positive']\n                request_type = caseinfo['payment_exception']['request_type']\n                expected_result = caseinfo['payment_exception']['expected_result']\n                status_code = caseinfo['payment_exception']['status_code']\n                field_name = caseinfo['payment_exception']['field_name']\n                if request_type == \"POST\":\n                    response = RestClient().post(url, data=data)\n                elif request_type == \"PUT\":\n                    response = RestClient().put(url, data=data)\n                elif request_type == \"GET\":\n                    response = RestClient().get(url,params=data)\n>               assert ApiAssertion('').assert_status_code(response, status_code) == True\nE               AssertionError: assert (False, 'Expected status code 200, but got 405') == True\nE                +  where (False, 'Expected status code 200, but got 405') = <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>>(<Response [405]>, 200)\nE                +    where <bound method ApiAssertion.assert_status_code of <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>> = <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0>.assert_status_code\nE                +      where <common.assertion_utils.ApiAssertion object at 0x00000256DC23F2D0> = ApiAssertion('')\n\ntest_project\\test_case_execution.py:32: AssertionError","steps":[],"attachments":[{"uid":"cd2139382170a347","name":"log","source":"cd2139382170a347.txt","type":"text/plain","size":78}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"test_project"},{"name":"suite","value":"test_case_execution"},{"name":"subSuite","value":"TestAllCases"},{"name":"host","value":"DESKTOP-MMPUN61"},{"name":"thread","value":"12416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_project.test_case_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'payment_exception': {'case_id': 'API004', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'page': ' 1', 'limit': ' 20', 'bill_state': ' -1', 'invoice_title': ' 0'}, 'is_positive': 'None', 'request_type': 'GET', 'expected_result': 'None', 'status_code': 200, 'field_name': 'None'}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fded8ca762685168.json","parameterValues":["{'payment_exception': {'case_id': 'API004', 'title': '付款异常', 'url': 'https://open-t.handyprint.cn/api/bill/payables/apply', 'data': {'page': ' 1', 'limit': ' 20', 'bill_state': ' -1', 'invoice_title': ' 0'}, 'is_positive': 'None', 'request_type': 'GET', 'expected_result': 'None', 'status_code': 200, 'field_name': 'None'}}"]}